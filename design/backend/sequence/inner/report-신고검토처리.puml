@startuml
!theme mono

title Report 서비스 - 신고검토처리 내부 시퀀스

actor "Admin" as admin
participant "AdminReportController" as ctrl
participant "ReportReviewService" as service
participant "ReportDomainService" as domain
participant "EvidenceService" as evidence
participant "NotificationService" as notification
participant "ReportRepository" as repo
participant "EvidenceRepository" as evidenceRepo
database "Redis Cache<<E>>" as cache
database "PostgreSQL<<E>>" as db
queue "MessageQueue<<E>>" as mq
participant "SafetyService<<E>>" as safety
participant "UserService<<E>>" as user

note over admin, user: UFR-REPO-020: 신고검토처리 플로우

== 검토 대기 신고 목록 조회 ==
admin -> ctrl : GET /api/admin/reports/pending
activate ctrl
ctrl -> service : getPendingReports(filter)
activate service
service -> repo : findPendingReports(criteria)
activate repo
repo -> db : SELECT * FROM reports WHERE status = 'PENDING'
note right : 우선순위, 접수일시 순 정렬
db --> repo : 검토 대기 신고 목록
deactivate repo
service -> cache : cachePendingReports(reports)
service --> ctrl : PendingReportsResponse
deactivate service
ctrl --> admin : 검토 대기 신고 목록
deactivate ctrl

== 신고 상세 정보 조회 ==
admin -> ctrl : GET /api/admin/reports/{reportId}/detail
activate ctrl
ctrl -> service : getReportDetail(reportId)
activate service

' 신고 기본 정보 조회
service -> repo : findByIdWithDetails(reportId)
activate repo
repo -> db : 신고 상세 정보 + 증거자료 조회
db --> repo : 신고 전체 정보
deactivate repo

' 증거 자료 정보 조회
service -> evidence : getEvidenceDetails(reportId)
activate evidence
evidence -> evidenceRepo : findByReportId(reportId)
activate evidenceRepo
evidenceRepo -> db : SELECT * FROM evidences WHERE report_id = ?
evidenceRepo --> evidence : 증거 파일 목록
deactivate evidenceRepo
evidence --> service : 증거 자료 상세정보
deactivate evidence

' 피신고자 이력 조회
service -> user : getUserHistory(targetUserId)
note right : 피신고자 과거 신고 이력
service -> safety : getUserSafetyScore(targetUserId)
note right : 현재 안전도 점수 조회

service --> ctrl : ReportDetailResponse
deactivate service
ctrl --> admin : 신고 상세 정보 + 증거자료 + 사용자 이력
deactivate ctrl

== 신고 검토 및 처리 ==
admin -> ctrl : PUT /api/admin/reports/{reportId}/review
note right : 검토 결과 + 조치 내용
activate ctrl

ctrl -> service : reviewReport(reportId, reviewData)
activate service

' 검토 데이터 검증
service -> domain : validateReviewDecision(reviewData)
activate domain
domain -> domain : checkDecisionValidity()
domain -> domain : validatePenaltyLevel()
domain --> service : 검증 결과
deactivate domain

' 검토 결과 저장
service -> repo : updateReportStatus(reportId, reviewData)
activate repo
repo -> db : UPDATE reports SET status=?, review_result=?, reviewed_at=?
db --> repo : 업데이트 완료
deactivate repo

' 조치 유형별 처리
alt 사실 확인 (제재 조치)
    service -> safety : applySafetyPenalty(targetUserId, penaltyType, points)
    note right : 안전도 차감 및 제재 적용

    service -> user : applyUserSanction(targetUserId, sanctionType)
    note right : 경고/정지 등 계정 조치

    service -> service : scheduleMonitoring(targetUserId)
    note right : 향후 모니터링 강화 설정

else 사실 확인 어려움
    service -> service : setupEnhancedMonitoring(targetUserId)
    note right : 모니터링만 강화

else 거짓 신고
    service -> safety : applyReporterPenalty(reporterId, penaltyPoints)
    note right : 신고자에게 경고 조치
end

' 처리 결과 알림
service -> notification : sendReviewCompletionNotification(reportId, decision)
activate notification
notification -> mq : publishReportReviewedEvent(reportEvent)
note right : 신고자, 피신고자 알림
deactivate notification

' 캐시 업데이트
service -> cache : updateReportCache(reportId, reviewResult)
service -> cache : invalidatePendingReportsCache()

service --> ctrl : ReviewCompletionResponse
deactivate service
ctrl --> admin : 검토 처리 완료 응답
deactivate ctrl

== 비동기 후속 처리 ==
mq --> notification : ReportReviewedEvent 처리
activate notification

' 당사자들에게 결과 통보
notification -> notification : sendReporterNotification()
note right : 신고자에게 처리 결과 통보

notification -> notification : sendTargetUserNotification()
note right : 피신고자에게 조치 내용 통보 (해당시)

' 관련 서비스 업데이트
notification -> safety : requestSafetyScoreRecalculation(userId)
note right : 안전도 재계산 요청

notification -> service : updateReportStatistics()
note right : 신고 처리 통계 업데이트

deactivate notification

== 유사 사건 모니터링 설정 ==
service -> domain : setupSimilarCaseMonitoring(reportData)
activate domain
domain -> domain : extractMonitoringPatterns()
domain -> domain : defineDetectionRules()
domain --> service : 모니터링 규칙 설정 완료
deactivate domain

service -> mq : publishMonitoringRulesUpdatedEvent()
note right : Monitor 서비스에 새로운 감지 규칙 전달

@enduml